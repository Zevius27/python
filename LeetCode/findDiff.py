

# You are given two strings s and t.

# String t is generated by random shuffling string s and then add one more letter at a random position.

# Return the letter that was added to t.


# use 2 maps
# in one maps t's frequency and other s's frequency
#  see if each char has same one if it doesnt its the one


# class Solution:
#     def findTheDifference(self, s: str, t: str) -> str:
#         map1 = {}
#         map2 = {}
#         for i in s:
#             if i in map1.keys():
#                 map1[i] = map1[i] + 1

#             else:
#                 map1.update(i, 1)
#         for i in t:
#             if i in map2.keys():
#                 map2[i] = map2[i] + 1

#             else:
#                 map2.update(i, 1)

#         for i in map2:
#             if map2[i] != map1[i]:
#                 return i










from collections import Counter


class Solution:
    def findTheDifference(self, s: str, t: str) -> str:
        s_count = Counter(s)   # hashmap of counts
        t_count = Counter(t)
        print("")
        for ch in t_count:
            if s_count.get(ch, 0) != t_count[ch]:
                return ch


s = "abcd"
t = "abcde"
solo = Solution()
solo.findTheDifference(s,t)